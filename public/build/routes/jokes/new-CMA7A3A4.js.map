{
  "version": 3,
  "sources": ["empty-module:~/utils/request.server", "../../../../app/routes/jokes/new.tsx", "../../../../app/components/upload-file.tsx"],
  "sourcesContent": ["module.exports = {};", "import type { ActionArgs } from \"@remix-run/node\"\r\nimport { redirect } from \"@remix-run/node\"\r\nimport { useActionData } from \"@remix-run/react\"\r\nimport { ensureUserPresent } from \"~/controllers/controller-hooks/ensure-user-present\"\r\nimport { db } from \"~/utils/db.server\"\r\nimport { badRequest } from \"~/utils/request.server\"\r\nimport { UploadFile } from \"~/components/upload-file\"\r\nfunction validateJokeContent(content: string) {\r\n  if (content.length < 10) {\r\n    return \"That joke is too short\"\r\n  }\r\n}\r\n\r\nfunction validateJokeName(name: string) {\r\n  if (name.length < 3) {\r\n    return \"That joke's name is too short\"\r\n  }\r\n}\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n  const { user } = await ensureUserPresent({ request })\r\n\r\n  const form = await request.formData()\r\n\r\n  const content = form.get(\"content\")\r\n  const name = form.get(\"name\")\r\n\r\n  if (typeof content !== \"string\" || typeof name !== \"string\") {\r\n    return badRequest({\r\n      fieldErrors: null,\r\n      fields: null,\r\n      formError: \"Form not submitted correctly.\",\r\n    })\r\n  }\r\n\r\n  const fieldErrors = {\r\n    content: validateJokeContent(content),\r\n    name: validateJokeName(name),\r\n  }\r\n  const fields = { content, name }\r\n  if (Object.values(fieldErrors).some(Boolean)) {\r\n    return badRequest({\r\n      fieldErrors,\r\n      fields,\r\n      formError: null,\r\n    })\r\n  }\r\n\r\n  const joke = await db.joke.create({\r\n    data: { ...fields, jokesterId: user.id },\r\n  })\r\n  return redirect(`/jokes/${joke.id}`)\r\n}\r\n\r\nexport default function NewJokeRoute() {\r\n  const actionData = useActionData<typeof action>()\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <UploadFile/>\r\n      </div>\r\n      <p>Add your own hilarious joke</p>\r\n      <form method=\"post\">\r\n        <div>\r\n          <label>\r\n            Name:{\" \"}\r\n            <input\r\n              defaultValue={actionData?.fields?.name}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              aria-invalid={Boolean(actionData?.fieldErrors?.name)}\r\n              aria-errormessage={\r\n                actionData?.fieldErrors?.name ? \"name-error\" : undefined\r\n              }\r\n            />\r\n          </label>\r\n          {actionData?.fieldErrors?.name ? (\r\n            <p className=\"form-validation-error\" id=\"name-error\" role=\"alert\">\r\n              {actionData.fieldErrors.name}\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Content:{\" \"}\r\n            <textarea\r\n              defaultValue={actionData?.fields?.content}\r\n              name=\"content\"\r\n              aria-invalid={Boolean(actionData?.fieldErrors?.content)}\r\n              aria-errormessage={\r\n                actionData?.fieldErrors?.content ? \"content-error\" : undefined\r\n              }\r\n            />\r\n          </label>\r\n          {actionData?.fieldErrors?.content ? (\r\n            <p\r\n              className=\"form-validation-error\"\r\n              id=\"content-error\"\r\n              role=\"alert\">\r\n              {actionData.fieldErrors.content}\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          {actionData?.formError ? (\r\n            <p className=\"form-validation-error\" role=\"alert\">\r\n              {actionData.formError}\r\n            </p>\r\n          ) : null}\r\n          <button type=\"submit\" className=\"button\">\r\n            Add\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" />\r\n        </div>\r\n      </form>\r\n      \r\n    </div>\r\n  )\r\n}\r\n", "import { useState, useRef, useEffect } from \"react\";\r\n// import { Dashboard } from \"@uppy/react\";\r\n\r\nconst getEnv = process.env.NEXT_PUBLIC_UPPY_TUS_ENDPOINT;\r\n\r\nconst useClientUppy = ({ destinations} ) => {\r\n  const [uppy, setUppy] = useState(null);\r\n  const DashboardModalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const execute = async () => {\r\n      const { Dashboard } = await import(\"@uppy/react\");\r\n      const Uppy = (await import(\"@uppy/core\")).default;\r\n      const Tus = (await import(\"@uppy/tus\")).default;\r\n\r\n      const uppy = new Uppy({\r\n        debug: true,\r\n        autoProceed: false,\r\n        restrictions: {\r\n          maxNumberOfFiles: 1,\r\n        },\r\n      });\r\n\r\n      if (destinations.includes(\"tus\")) {\r\n        uppy.use(Tus, {\r\n          endpoint: getEnv,\r\n        });\r\n      }\r\n      DashboardModalRef.current = Dashboard;\r\n      setUppy(uppy);\r\n    };\r\n    execute();\r\n  }, []);\r\n\r\n  const Dashboard = DashboardModalRef.current;\r\n  return { uppy, Dashboard };\r\n};\r\n\r\n// const StaticDisabledButton = ({ buttonProps, label }) => {\r\n//   return (\r\n//     <button disabled={true} {...buttonProps}>\r\n//       {label}\r\n//     </button>\r\n//   );\r\n// };\r\n\r\nexport const UploadFile = ({\r\n  button: { label: buttonLabel = \"Upload\", props: buttonProps = {} } = {},\r\n  destinations = [\"tus\"],\r\n  onComplete = () => {},\r\n  ...forwardedProps\r\n}) => {\r\n  const { uppy, Dashboard } = useClientUppy({ destinations });\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // if (!uppy || !DashboardModal) {\r\n  //   return (\r\n  //     <StaticDisabledButton buttonProps={buttonProps} label={buttonLabel} />\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setOpen(!open)} {...buttonProps}>\r\n        {buttonLabel}\r\n      </button>{\r\n        Dashboard && <Dashboard\r\n        uppy={uppy}\r\n        showProgressDetails={true}\r\n        waitForThumbnailsBeforeUpload={true}\r\n      />\r\n      }\r\n      \r\n      hiii\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFile;\r\n"],
  "mappings": "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",
  "names": ["Dashboard", "uppy", "import_jsx_dev_runtime"]
}
